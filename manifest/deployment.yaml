apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: addressbook
spec:
  replicas:
  selector:
    matchLabels:
      app: addressbook
  template:
    metadata:
      name: addressbook
      labels:
        app: addressbook
    spec:
      containers:
      - name: addressbook-container
        image: 339712828145.dkr.ecr.eu-west-2.amazonaws.com/addressbook:1.0.0
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
        - name: MONGO_DB_HOSTNAME
          value: mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: dev
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: gp2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: dev
  labels:
    app: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  serviceName: "mongodb"
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
      storageClassName: gp2
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: dev
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: addressbook
  namespace: dev
spec:
  selector:
    app: addressbook
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
